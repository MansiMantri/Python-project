# Python program to generate random
# password using Tkinter module
#import pyperclip
import random
import sqlite3
import tkinter
import tkinter.messagebox
from tkinter import *
from tkinter.ttk import *

list_of_passwords={}

credential=[]

def loginevent():
   x = user.get()
   y = pas.get()

   sqliteConnection = sqlite3.connect('database.db')
   cur = sqliteConnection.cursor()
   print("Successfully Connected to SQLite")
   sqlite_insert_query = "INSERT INTO database VALUES ( ?, ? )"
   emp = (x, y)
   cur.execute(sqlite_insert_query, emp)
   sqliteConnection.commit()
   print("Record inserted successfully into database table ", cur.rowcount)
   cur.close()
   sqliteConnection.close()
   print("The SQLite connection is closed")
   # start the GUI

   print("Username =", x, "\nPassword =", y)

   z=tkinter.messagebox.showinfo('Message','Login Successsful!!')
   exit()
# Run this below code if you want to store all the passwords


def cancelevent():
   yn = tkinter.messagebox.askyesno("Yes/No", "Do you want to Exit?")
   if yn == True:
      exit()


# Function for calculation of password
def low():
   entry.delete(0, END)
   # Get the length of password
   length = var1.get()

   lower = "abcdefghijklmnopqrstuvwxyz"
   upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
   digits = "0123456789"
   symbol = "!@#$%^&*()"
   password = ""

   # if strength selected is low
   if var.get() == 1:
      for i in range(0, length):
         password = password + random.choice(lower)
      return password

   # if strength selected is medium
   elif var.get() == 0:
      for i in range(0, length):
         password = password + random.choice(upper)
      return password

   # if strength selected is strong
   elif var.get() == 3:
      for i in range(0, length):
         password = password + random.choice(digits+upper+symbol)
      return password
   else:
      print("Please choose an option")


# Function for generation of password
def generate():
   password1 = low()
   entry.insert(10, password1)

# Main Function

# create GUI window
root = Tk()
var = IntVar()
var1 = IntVar()
user = StringVar()
pas= StringVar()

# Title of your GUI window
root.title("Random Password Generator")
root.geometry("600x600+300+150")
root.maxsize(800,800)
heading = Label(root, text="Login Page", font=('arial','19'))
heading.place(x=200,y=20)
u_name = Label(root, text="*Username",font=('arial','13'))
u_name.place(x=20,y=105)
u_name=Entry(root)
entry = Entry(root,  textvariable=user)
entry.place(x=130,y=110)
required=Label(root,text="*REQUIRED",font=('arial','10'))
required.config(foreground="red")
required.place(x=500,y=500)
# create label and entry to show
# password generated
Random_password = Label(root, text="*Password", font=('arial','13'))
Random_password.place(x=20,y=140)
Random_password=Entry(root)
#Random_password.grid(row=0)
entry = Entry(root, textvariable=pas)
#entry.grid(row=0, column=1)
entry.place(x=130,y=140)
# create label for length of password
c_label = Label(root, text="Length",font=('arial','10'))
#c_label.grid(row=1)
c_label.place(x=40,y=250)
# create Buttons Copy which will copy
# password to clipboard and Generate
# which will generate the password

generate_button = Button(root, text="Generate", command=generate)

generate_button.place(x=330,y=140)
# Radio Buttons for deciding the
# strength of password
# Default strength is Medium
radio_low = Radiobutton(root, text="Low", variable=var, value=1)
radio_low.grid(sticky='E')
radio_low.place(x=130,y=180)
radio_middle = Radiobutton(root, text="Medium", variable=var, value=0)
radio_middle.grid(sticky='E')
radio_middle.place(x=190,y=180)
radio_strong = Radiobutton(root, text="Strong", variable=var, value=3)
radio_strong.grid(sticky='E')
radio_strong.place(x=275,y=180)
combo = Combobox(root, textvariable=var1)

# Combo Box for length of your password
combo['values'] = (6,7,8, 9, 10, 11, 12)
combo.current(0)
combo.bind('<<ComboboxSelected>>')
combo.grid(column=1, row=1)
combo.place(x=130,y=250)
userx = user.get()
pasy = pas.get()

Login_button=Button(text="Login",command=loginevent).place(x=150,y=350)
Cancel_button=Button(text="Cancel" ,command=cancelevent).place(x=300,y=350)
root.mainloop()
